Sub SearchAndDisplayMatches()
    Dim ws As Worksheet
    Dim searchValue As String
    Dim lastRow As Long
    Dim i As Long
    Dim foundMatches As Boolean
    Dim resultTable As ListObject
    Dim resultRow As ListRow
    Dim headerRange As Range
    Dim newRow As Long
    
    ' Set the worksheet where you want to perform the search
    Set ws = ThisWorkbook.Worksheets("Sheet1") ' Replace "Sheet1" with your sheet name
    
    ' Prompt the user for the search value
    searchValue = InputBox("Enter the keywords to search for:")
    
    ' Create a new worksheet to display the results
    Set resultTable = ws.ListObjects.Add(xlSrcRange, ws.Range("A1:D1").CurrentRegion, , xlYes)
    resultTable.Name = "SearchResultsTable"
    newRow = 1
    
    ' Find the last row in Column B
    lastRow = ws.Cells(ws.Rows.Count, "B").End(xlUp).Row
    
    ' Loop through Column B and check for matches
    For i = 2 To lastRow ' Start from row 2 to skip the header row
        If MatchKeywords(ws.Cells(i, 2).Value, searchValue) Then
            ' If a match is found, add it to the result table
            If Not foundMatches Then
                foundMatches = True
            End If
            ' Copy the entire row to the result table
            Set resultRow = resultTable.ListRows.Add
            ws.Rows(i).Copy resultRow.Range
        End If
    Next i
    
    ' Check if any matches were found
    If Not foundMatches Then
        MsgBox "No matches found."
        Application.DisplayAlerts = False
        resultTable.Delete
        Application.DisplayAlerts = True
    Else
        ' Create a new worksheet to display the result table
        Dim resultWorksheet As Worksheet
        Set resultWorksheet = ThisWorkbook.Sheets.Add
        resultWorksheet.Name = "SearchResults"
        
        ' Copy the result table to the new worksheet
        resultTable.HeaderRowRange.Copy resultWorksheet.Cells(1, 1)
        resultTable.DataBodyRange.Copy resultWorksheet.Cells(2, 1)
    End If
End Sub

Function MatchKeywords(cellValue As String, keywords As String) As Boolean
    Dim keywordArray() As String
    Dim keyword As String
    Dim matched As Boolean
    Dim i As Long
    
    ' Split the keywords into an array
    keywordArray = Split(keywords, " ")
    
    ' Check if all keywords are found in the cell value (not case-sensitive)
    matched = True
    For i = LBound(keywordArray) To UBound(keywordArray)
        keyword = keywordArray(i)
        If InStr(1, LCase(cellValue), LCase(keyword), vbTextCompare) = 0 Then
            matched = False
            Exit For
        End If
    Next i
    
    MatchKeywords = matched
End Function
